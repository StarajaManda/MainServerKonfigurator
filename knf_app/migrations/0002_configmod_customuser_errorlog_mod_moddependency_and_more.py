# Generated by Django 5.2.6 on 2025-09-30 04:15

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('knf_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfigMod',
            fields=[
                ('config_mod_id', models.AutoField(primary_key=True, serialize=False)),
                ('load_order', models.IntegerField()),
                ('is_enabled', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'Config_Mods',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password_hash', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('role', models.CharField(max_length=50)),
                ('avatar_url', models.URLField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Users',
            },
        ),
        migrations.CreateModel(
            name='ErrorLog',
            fields=[
                ('error_id', models.AutoField(primary_key=True, serialize=False)),
                ('error_type', models.CharField(max_length=100)),
                ('error_message', models.TextField()),
                ('severity', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'Error_Logs',
            },
        ),
        migrations.CreateModel(
            name='Mod',
            fields=[
                ('mod_id', models.AutoField(primary_key=True, serialize=False)),
                ('author', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('category', models.CharField(max_length=100)),
                ('download_url', models.URLField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('mod_name', models.CharField(max_length=255)),
                ('mod_version', models.CharField(max_length=50)),
                ('minecraft_version', models.CharField(max_length=50)),
                ('mod_type', models.CharField(max_length=100)),
                ('file_name', models.CharField(max_length=255)),
                ('file_size', models.BigIntegerField()),
            ],
            options={
                'db_table': 'Mods',
            },
        ),
        migrations.CreateModel(
            name='ModDependency',
            fields=[
                ('dependency_id', models.AutoField(primary_key=True, serialize=False)),
                ('is_required', models.BooleanField(default=True)),
                ('mod', models.ForeignKey(db_column='mod_id', on_delete=django.db.models.deletion.CASCADE, related_name='dependencies', to='knf_app.mod')),
                ('required_mod', models.ForeignKey(db_column='required_mod_id', on_delete=django.db.models.deletion.CASCADE, related_name='required_by', to='knf_app.mod')),
            ],
            options={
                'db_table': 'Mod_Dependencies',
            },
        ),
        migrations.CreateModel(
            name='ModIncompatibility',
            fields=[
                ('incompatibility_id', models.AutoField(primary_key=True, serialize=False)),
                ('conflict_type', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('mod_id_1', models.ForeignKey(db_column='mod_id_1', on_delete=django.db.models.deletion.CASCADE, related_name='incompatibilities_as_first', to='knf_app.mod')),
                ('mod_id_2', models.ForeignKey(db_column='mod_id_2', on_delete=django.db.models.deletion.CASCADE, related_name='incompatibilities_as_second', to='knf_app.mod')),
            ],
            options={
                'db_table': 'Mod_Incompatibilities',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('currency', models.CharField(max_length=10)),
                ('status', models.CharField(max_length=50)),
                ('payment_method', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='knf_app.customuser')),
            ],
            options={
                'db_table': 'Payments',
            },
        ),
        migrations.CreateModel(
            name='PlayerStat',
            fields=[
                ('stat_id', models.AutoField(primary_key=True, serialize=False)),
                ('player_uuid', models.CharField(max_length=36)),
                ('player_name', models.CharField(max_length=16)),
                ('play_time', models.IntegerField()),
                ('blocks_mined', models.IntegerField(default=0)),
                ('mobs_killed', models.IntegerField(default=0)),
                ('deaths', models.IntegerField(default=0)),
                ('last_seen', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Player_Stats',
            },
        ),
        migrations.CreateModel(
            name='RunningServer',
            fields=[
                ('server_id', models.AutoField(primary_key=True, serialize=False)),
                ('server_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('server_port', models.IntegerField()),
                ('status', models.CharField(max_length=50)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('stop_time', models.DateTimeField(blank=True, null=True)),
                ('cpu_usage', models.FloatField(blank=True, null=True)),
                ('memory_usage_mb', models.IntegerField(blank=True, null=True)),
                ('player_count', models.IntegerField(default=0)),
                ('uptime_seconds', models.IntegerField(default=0)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='knf_app.customuser')),
            ],
            options={
                'db_table': 'Running_Servers',
            },
        ),
        migrations.CreateModel(
            name='ServerBackup',
            fields=[
                ('backup_id', models.AutoField(primary_key=True, serialize=False)),
                ('backup_name', models.CharField(max_length=255)),
                ('file_path', models.CharField(max_length=500)),
                ('file_size', models.BigIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_automatic', models.BooleanField(default=False)),
                ('server', models.ForeignKey(db_column='server_id', on_delete=django.db.models.deletion.CASCADE, to='knf_app.runningserver')),
            ],
            options={
                'db_table': 'Server_Backups',
            },
        ),
        migrations.CreateModel(
            name='ServerConfig',
            fields=[
                ('config_id', models.AutoField(primary_key=True, serialize=False)),
                ('config_name', models.CharField(max_length=255)),
                ('minecraft_version', models.CharField(max_length=50)),
                ('server_type', models.CharField(max_length=100)),
                ('ram_mb', models.IntegerField()),
                ('max_players', models.IntegerField()),
                ('difficulty', models.CharField(blank=True, max_length=50, null=True)),
                ('game_mode', models.CharField(blank=True, max_length=50, null=True)),
                ('world_seed', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('view_distance', models.IntegerField()),
                ('online_mode', models.BooleanField(default=True)),
                ('pvp_enabled', models.BooleanField(default=True)),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='knf_app.customuser')),
            ],
            options={
                'db_table': 'Server_Configs',
            },
        ),
        migrations.CreateModel(
            name='ServerLog',
            fields=[
                ('log_id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('log_level', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'Server_Logs',
            },
        ),
        migrations.CreateModel(
            name='ServerStatistic',
            fields=[
                ('stat_id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('players_online', models.IntegerField()),
                ('memory_usage', models.IntegerField()),
                ('cpu_usage', models.FloatField()),
                ('tps', models.FloatField()),
            ],
            options={
                'db_table': 'Server_Statistics',
            },
        ),
        migrations.CreateModel(
            name='ServerTemplate',
            fields=[
                ('template_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('minecraft_version', models.CharField(max_length=50)),
                ('server_type', models.CharField(max_length=100)),
                ('recommended_ram', models.IntegerField()),
                ('is_public', models.BooleanField(default=False)),
                ('download_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.CASCADE, to='knf_app.customuser')),
            ],
            options={
                'db_table': 'Server_Templates',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('plan_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(max_length=10)),
                ('max_ram', models.IntegerField()),
                ('max_players', models.IntegerField()),
                ('max_servers', models.IntegerField()),
                ('features', models.TextField()),
            ],
            options={
                'db_table': 'Subscription_Plans',
            },
        ),
        migrations.CreateModel(
            name='SupportTicket',
            fields=[
                ('ticket_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('status', models.CharField(max_length=50)),
                ('priority', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='knf_app.customuser')),
            ],
            options={
                'db_table': 'Support_Tickets',
            },
        ),
        migrations.CreateModel(
            name='TicketMessage',
            fields=[
                ('message_id', models.AutoField(primary_key=True, serialize=False)),
                ('message_text', models.TextField()),
                ('is_internal', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ticket', models.ForeignKey(db_column='ticket_id', on_delete=django.db.models.deletion.CASCADE, to='knf_app.supportticket')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='knf_app.customuser')),
            ],
            options={
                'db_table': 'Ticket_Messages',
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('session_id', models.AutoField(primary_key=True, serialize=False)),
                ('session_token', models.CharField(max_length=255, unique=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='knf_app.customuser')),
            ],
            options={
                'db_table': 'User_Sessions',
            },
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('subscription_id', models.AutoField(primary_key=True, serialize=False)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('status', models.CharField(max_length=50)),
                ('auto_renew', models.BooleanField(default=False)),
                ('plan', models.ForeignKey(db_column='plan_id', on_delete=django.db.models.deletion.CASCADE, to='knf_app.subscriptionplan')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='knf_app.customuser')),
            ],
            options={
                'db_table': 'User_Subscriptions',
            },
        ),
        migrations.CreateModel(
            name='World',
            fields=[
                ('world_id', models.AutoField(primary_key=True, serialize=False)),
                ('world_name', models.CharField(max_length=255)),
                ('world_size', models.BigIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Worlds',
            },
        ),
        migrations.DeleteModel(
            name='User',
        ),
        migrations.AddField(
            model_name='errorlog',
            name='mod',
            field=models.ForeignKey(blank=True, db_column='mod_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='knf_app.mod'),
        ),
        migrations.AddField(
            model_name='configmod',
            name='mod',
            field=models.ForeignKey(db_column='mod_id', on_delete=django.db.models.deletion.CASCADE, to='knf_app.mod'),
        ),
        migrations.AddField(
            model_name='playerstat',
            name='server',
            field=models.ForeignKey(db_column='server_id', on_delete=django.db.models.deletion.CASCADE, to='knf_app.runningserver'),
        ),
        migrations.AddField(
            model_name='errorlog',
            name='server',
            field=models.ForeignKey(blank=True, db_column='server_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='knf_app.runningserver'),
        ),
        migrations.AddField(
            model_name='runningserver',
            name='config',
            field=models.ForeignKey(db_column='config_id', on_delete=django.db.models.deletion.CASCADE, to='knf_app.serverconfig'),
        ),
        migrations.AddField(
            model_name='errorlog',
            name='config',
            field=models.ForeignKey(db_column='config_id', on_delete=django.db.models.deletion.CASCADE, to='knf_app.serverconfig'),
        ),
        migrations.AddField(
            model_name='configmod',
            name='config',
            field=models.ForeignKey(db_column='config_id', on_delete=django.db.models.deletion.CASCADE, to='knf_app.serverconfig'),
        ),
        migrations.AddField(
            model_name='serverlog',
            name='server',
            field=models.ForeignKey(db_column='server_id', on_delete=django.db.models.deletion.CASCADE, to='knf_app.runningserver'),
        ),
        migrations.AddField(
            model_name='serverstatistic',
            name='server',
            field=models.ForeignKey(db_column='server_id', on_delete=django.db.models.deletion.CASCADE, to='knf_app.runningserver'),
        ),
        migrations.AddField(
            model_name='serverconfig',
            name='template',
            field=models.ForeignKey(blank=True, db_column='template_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='knf_app.servertemplate'),
        ),
        migrations.AddField(
            model_name='world',
            name='server',
            field=models.ForeignKey(db_column='server_id', on_delete=django.db.models.deletion.CASCADE, to='knf_app.runningserver'),
        ),
    ]
